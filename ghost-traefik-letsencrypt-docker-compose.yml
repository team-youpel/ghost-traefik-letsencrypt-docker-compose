version: '3'

networks:
  ghost-network:
    external: true
  traefik-network:
    external: true

volumes:
  mysql-data:
  ghost-data:

services:
  mysql:
    image: ${GHOST_MYSQL_IMAGE_TAG}
    volumes:
      - mysql-data:/var/lib/mysql
    environment: 
      MYSQL_DATABASE: ${GHOST_DB_NAME}
      MYSQL_USER: ${GHOST_DB_USER}
      MYSQL_PASSWORD: ${GHOST_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${GHOST_DB_ADMIN_PASSWORD}
    networks:
      - ghost-network
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=${GHOST_DB_ADMIN_PASSWORD} --execute \"SHOW DATABASES;\""
      interval: 10s
      timeout: 20s
      retries: 10
    restart: unless-stopped

  ghost:
    image: ${GHOST_IMAGE_TAG}
    volumes:
      - ghost-data:${DATA_PATH}
    environment:
      NODE_ENV: production
      url: ${GHOST_URL}
      database__client: mysql
      database__connection__host: mysql
      database__connection__database: ${GHOST_DB_NAME}
      database__connection__user: ${GHOST_DB_USER}
      database__connection__password: ${GHOST_DB_PASSWORD}
    networks:
      - ghost-network
      - traefik-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2368/ghost/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ghost.rule=Host(`${GHOST_HOSTNAME}`)"
      - "traefik.http.routers.ghost.entrypoints=web"
      - "traefik.http.services.ghost.loadbalancer.server.port=2368"
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy

  traefik:
    image: ${TRAEFIK_IMAGE_TAG}
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-network
    ports:
      - "80:80"
      - "8080:8080"
    restart: unless-stopped